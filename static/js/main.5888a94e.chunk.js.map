{"version":3,"sources":["components/Alert.js","components/About.js","components/Navabar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","React","createElement","style","height","alert","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","About","myStyle","color","mode","backgroundColor","id","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","data-bs-parent","Navabar","location","useLocation","useEffect","title","aria-label","Link","pathname","aria-current","to","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","mb-2","disabled","length","Heading","value","onChange","event","target","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Router","body","Routes","Route","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.5888a94e.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Alert(props) {\n            const capitalize =(word) =>{\n                const lower = word.toLowerCase();\n                return lower.charAt(0).toUpperCase() + lower.slice(1)\n            }\n\n  return (\n    <div style={{height: '50px'}}>\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role = \"alert\">\n   <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\n  </div>}\n  </div>\n  )\n}\n","import React from 'react'\n\nexport default function About(props) {\n\n    // const [myStyle,setMyStyle] = useState({\n    //     color: 'black',\n    //     backgroundColor: 'white'\n    // })\n\n    let myStyle = {\n        color : props.mode === 'dark'?'white':'black',\n        backgroundColor: props.mode === 'dark'?'rgb(36 74 104)':'white',\n        // border: '1px solid',\n        // borderColor: props.mode === 'dark'?'white':'dark'\n    }\n    \n\n  return (\n        <div className=\"container\"  >\n        <h1 className=\"my-3 \" style={{color : props.mode === 'dark'?'white':'black'}}>About us</h1>\n        <div className=\"accordion\" id=\"accordionExample\">\n    <div className=\"accordion-item\" style={myStyle}>\n        <h2 className=\"accordion-header\">\n        <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n           <strong>Analyse your text</strong>\n\n        </button>\n        </h2>\n        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\n        <div className=\"accordion-body\">\n            <p>TextUtils gives you a way to analyze your text quickly and efficiently. Be it word count, character count.</p>\n        </div>\n        </div>\n    </div>\n    <div className=\"accordion-item \" style={myStyle}>\n        <h2 className=\"accordion-header\">\n        <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n            <strong>Free to use</strong>\n\n        </button>\n        </h2>\n        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\n        <div className=\"accordion-body\">\n            <p>TextUtils is a free character tool that provides instant character count and word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.</p>\n        </div>\n        </div>\n    </div>\n    <div className=\"accordion-item\" style={myStyle}>\n        <h2 className=\"accordion-header\">\n        <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n            <strong>Browser Compatible</strong>\n        </button>\n        </h2>\n        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\n        <div className=\"accordion-body\">\n            <p>This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, excel document, pdf document, essays, etc.</p>\n        </div>\n        </div>\n    </div>\n    </div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { useLocation } from 'react-router-dom'\n\n\n\nexport default function Navabar(props) {\n  let location = useLocation();\n  useEffect(() =>{\n    // console.log(location.pathname)\n  },[location]);\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\n    <div className=\"container-fluid\">\n    <span className=\"nav navbar-brand\" >{props.title}</span>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <Link className={`nav-link ${location.pathname===\"/\"?\"active\":\"\"}`} aria-current=\"page\" to=\"/\">Home</Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className={`nav-link ${location.pathname===\"/about\"?\"active\":\"\"}`} to=\"/about\">About</Link>\n        </li>\n       \n      </ul>\n      <div className={`form-check form-switch text-${props.mode ==='light' ? 'dark' : 'light'}`}>\n        <input className=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\" />\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{`${props.mode === 'dark'?'Light':'Dark'} Mode`}</label>\n            </div>\n          </div>\n        </div>\n      </nav>\n  )\n}\n\nNavabar.propTypes = {\n    title : PropTypes.string.isRequired,\n}\n\nNavabar.defaultProps = {\n    title : 'set title here',\n}","import React, { useState } from 'react';\n\nexport default function TextForm(props) {\n    const handleUpClick = ()=>{\n        // console.log(\"Uppercase was clicked\" + text)\n        let newText = text.toUpperCase();\n        setText(newText) \n        props.showAlert(\"Converted to uppercase\",\"success\");\n    }\n    const handleLowClick = ()=>{\n        // console.log(\"Uppercase was clicked\" + text)\n        let newText = text.toLowerCase();\n        setText(newText) \n        props.showAlert(\"Converted to lowercase\",\"success\");\n    }\n    const handleClearClick = ()=>{\n        \n        let newText = '';\n        setText(newText) \n        props.showAlert(\"Text cleared\",\"success\");\n    }\n    const handleCopy = ()=>{\n        var text =document.getElementById(\"exampleFormControlTextarea1\");\n        text.select();\n        navigator.clipboard.writeText(text.value) \n        props.showAlert(\"Copy to clipboard\",\"success\");\n    }\n    const handleSpaces = ()=>{\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \")) \n        props.showAlert(\"Removed extra spaces\",\"success\");\n    }\n    const handleOnChange = (event)=>{\n        setText(event.target.value);\n    }\n    \n\n    const [text, setText] = useState('');\n    // text = \"new text\"; //wrong way to change the state\n    // setText(\"new text\"); //Correct way to change the text\n  return (\n    <>\n    <div className='container' style = {{color: props.mode === 'dark'?'white':'#042743'}}>\n        <h1 mb-2=\"true\" disabled={text.length===0} >{props.Heading}</h1>\n      <div className=\"mb-3\">\n        <textarea className=\"text form-control\" value={text} \n        onChange={handleOnChange} style={{backgroundColor : props.mode ==='dark'?'#13466e':'white',color: props.mode === 'dark'?'white':'#042743'}} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\n      </div>\n      <button disabled={text.length===0} className='btn btn-primary my-2 mx-2' onClick={handleUpClick}>Convert to Uppercase</button>\n      <button disabled={text.length===0} className='btn btn-primary my-2 mx-2' onClick={handleLowClick}>Convert to Lowercase</button>\n      <button disabled={text.length===0} className='btn btn-primary my-2 mx-2' onClick={handleClearClick}>Clear text</button>\n      <button disabled={text.length===0} className='btn btn-primary my-2 mx-2' onClick={handleCopy}>Copy Text</button>\n      <button disabled={text.length===0} className='btn btn-primary my-2 mx-2' onClick={handleSpaces}>Remove Extra Spaces</button>\n    </div>\n    <div className=\"container\" style = {{color: props.mode === 'dark'?'white':'#042743'}}>\n      <h1>Your text summary</h1>\n      {/* <p>{text.split(\" \").length-1} words and {text.length} characters</p> */}\n      \n      <p>{text.split(/\\s+/).filter((element)=>{return element.length !== 0}).length} words and {text.length} characters</p>\n      <p>{0.008 * text.split(\" \").filter((element)=>{return element.length !== 0}).length} Minutes read</p>\n    <h2>Preview</h2>\n    <p>{text.length>0?text:\"Nothing to preview\"}</p>\n    </div>\n    </>\n  )\n}\n","import './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Navabar from './components/Navabar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);  //set alert iss state ko change krne ka function hai\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been ebabled\", \"success\");\n      // document.title = 'TextUtils - Dark Mode'; //Just to know that this is also exist and we can do this!\n      // setInterval(()=>{\n      //   document.title = 'TextUtils is amazing mode'\n      // },2000)\n      // setInterval(()=>{\n      //   document.title = 'Install TextUtils now'\n      // },1500)\n    }\n\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been ebabled\", \"success\")\n      // document.title = 'TextUtils - Light Mode';\n    }\n  }\n  return (\n    <>\n      {/* <Navabar title = \"Textutils1\"/>  */}\n      {/* <Navabar/>  */}\n      <Router>\n        <Navabar title=\"Textutils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Routes>\n            {/* <Route exact path=\"/\" element={<TextForm showAlert={showAlert} Heading=\"TextUtils - Word Counter, Character Counter, Remove extra spaces\" mode={mode} />}>\n              </Route> */}\n            <Route exact path=\"/\" element={<TextForm showAlert={showAlert} Heading=\"TextUtils - Word Counter, Character Counter, Remove extra spaces\" mode={mode} />}>\n            </Route>\n            <Route exact path=\"/about\" element={<About mode={mode} />}>\n            </Route>\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}